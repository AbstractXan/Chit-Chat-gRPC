// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat/chat.proto

package chat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username" json:"Username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_7ae21cd7199a1bc4, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Request) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Confirm struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=Ok" json:"Ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Confirm) Reset()         { *m = Confirm{} }
func (m *Confirm) String() string { return proto.CompactTextString(m) }
func (*Confirm) ProtoMessage()    {}
func (*Confirm) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_7ae21cd7199a1bc4, []int{1}
}
func (m *Confirm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Confirm.Unmarshal(m, b)
}
func (m *Confirm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Confirm.Marshal(b, m, deterministic)
}
func (dst *Confirm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Confirm.Merge(dst, src)
}
func (m *Confirm) XXX_Size() int {
	return xxx_messageInfo_Confirm.Size(m)
}
func (m *Confirm) XXX_DiscardUnknown() {
	xxx_messageInfo_Confirm.DiscardUnknown(m)
}

var xxx_messageInfo_Confirm proto.InternalMessageInfo

func (m *Confirm) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type Text struct {
	Txt                  string   `protobuf:"bytes,1,opt,name=Txt" json:"Txt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Text) Reset()         { *m = Text{} }
func (m *Text) String() string { return proto.CompactTextString(m) }
func (*Text) ProtoMessage()    {}
func (*Text) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_7ae21cd7199a1bc4, []int{2}
}
func (m *Text) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Text.Unmarshal(m, b)
}
func (m *Text) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Text.Marshal(b, m, deterministic)
}
func (dst *Text) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Text.Merge(dst, src)
}
func (m *Text) XXX_Size() int {
	return xxx_messageInfo_Text.Size(m)
}
func (m *Text) XXX_DiscardUnknown() {
	xxx_messageInfo_Text.DiscardUnknown(m)
}

var xxx_messageInfo_Text proto.InternalMessageInfo

func (m *Text) GetTxt() string {
	if m != nil {
		return m.Txt
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "chat.Request")
	proto.RegisterType((*Confirm)(nil), "chat.Confirm")
	proto.RegisterType((*Text)(nil), "chat.Text")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	// Server takes Requests and Sends Confirmation
	ConnRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Confirm, error)
	// Server/Client take in input returns a stream of Text
	Broadcast(ctx context.Context, opts ...grpc.CallOption) (Chat_BroadcastClient, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) ConnRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Confirm, error) {
	out := new(Confirm)
	err := c.cc.Invoke(ctx, "/chat.Chat/ConnRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Broadcast(ctx context.Context, opts ...grpc.CallOption) (Chat_BroadcastClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/chat.Chat/Broadcast", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatBroadcastClient{stream}
	return x, nil
}

type Chat_BroadcastClient interface {
	Send(*Text) error
	Recv() (*Text, error)
	grpc.ClientStream
}

type chatBroadcastClient struct {
	grpc.ClientStream
}

func (x *chatBroadcastClient) Send(m *Text) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatBroadcastClient) Recv() (*Text, error) {
	m := new(Text)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	// Server takes Requests and Sends Confirmation
	ConnRequest(context.Context, *Request) (*Confirm, error)
	// Server/Client take in input returns a stream of Text
	Broadcast(Chat_BroadcastServer) error
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_ConnRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).ConnRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/ConnRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).ConnRequest(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Broadcast_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatServer).Broadcast(&chatBroadcastServer{stream})
}

type Chat_BroadcastServer interface {
	Send(*Text) error
	Recv() (*Text, error)
	grpc.ServerStream
}

type chatBroadcastServer struct {
	grpc.ServerStream
}

func (x *chatBroadcastServer) Send(m *Text) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatBroadcastServer) Recv() (*Text, error) {
	m := new(Text)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConnRequest",
			Handler:    _Chat_ConnRequest_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Broadcast",
			Handler:       _Chat_Broadcast_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "chat/chat.proto",
}

func init() { proto.RegisterFile("chat/chat.proto", fileDescriptor_chat_7ae21cd7199a1bc4) }

var fileDescriptor_chat_7ae21cd7199a1bc4 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xce, 0x48, 0x2c,
	0xd1, 0x07, 0x11, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x2c, 0x20, 0xb6, 0x92, 0x23, 0x17,
	0x7b, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x14, 0x17, 0x47, 0x68, 0x71, 0x6a, 0x51,
	0x5e, 0x62, 0x6e, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x9c, 0x0f, 0x92, 0x0b, 0x48,
	0x2c, 0x2e, 0x2e, 0xcf, 0x2f, 0x4a, 0x91, 0x60, 0x82, 0xc8, 0xc1, 0xf8, 0x4a, 0x92, 0x5c, 0xec,
	0xce, 0xf9, 0x79, 0x69, 0x99, 0x45, 0xb9, 0x42, 0x7c, 0x5c, 0x4c, 0xfe, 0xd9, 0x60, 0xcd, 0x1c,
	0x41, 0x4c, 0xfe, 0xd9, 0x4a, 0x12, 0x5c, 0x2c, 0x21, 0xa9, 0x15, 0x25, 0x42, 0x02, 0x5c, 0xcc,
	0x21, 0x15, 0x25, 0x50, 0x53, 0x41, 0x4c, 0xa3, 0x04, 0x2e, 0x16, 0xe7, 0x8c, 0xc4, 0x12, 0x21,
	0x5d, 0x2e, 0x6e, 0xe7, 0xfc, 0xbc, 0x3c, 0x98, 0x1b, 0x78, 0xf5, 0xc0, 0x2e, 0x84, 0x72, 0xa5,
	0xa0, 0x5c, 0xa8, 0xf1, 0x4a, 0x0c, 0x42, 0x9a, 0x5c, 0x9c, 0x4e, 0x45, 0xf9, 0x89, 0x29, 0xc9,
	0x89, 0xc5, 0x25, 0x42, 0x5c, 0x10, 0x59, 0x90, 0x0d, 0x52, 0x48, 0x6c, 0x25, 0x06, 0x0d, 0x46,
	0x03, 0xc6, 0x24, 0x36, 0xb0, 0x37, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x81, 0x64, 0x34,
	0xb7, 0xf9, 0x00, 0x00, 0x00,
}
